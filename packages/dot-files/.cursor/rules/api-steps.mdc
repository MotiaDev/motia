---
description: How to create basic API Steps in Motia
globs: 
alwaysApply: false
---

# API Steps Guide

API Steps expose HTTP endpoints that can trigger workflows and emit events.

## Basic API Step Pattern
```typescript
import { ApiRouteConfig, Handlers } from 'motia'
import { z } from 'zod'

export const config: ApiRouteConfig = {
  type: 'api',
  name: 'create-user',
  path: '/users',
  method: 'POST',
  emits: ['user.created'],
  flows: ['user-management'],
  bodySchema: z.object({
    name: z.string(),
    email: z.string().email()
  })
}

export const handler: Handlers['create-user'] = async (req, { emit, logger }) => {
  const { name, email } = req.body
  
  logger.info('Creating user', { name, email })
  
  // Emit event to trigger next steps
  await emit({
    topic: 'user.created',
    data: { name, email, id: Date.now().toString() }
  })
  
  return {
    status: 201,
    body: { message: 'User created successfully' }
  }
}
```

## Common API Patterns

### GET Endpoint
```typescript
export const config: ApiRouteConfig = {
  type: 'api',
  name: 'get-users',
  path: '/users',
  method: 'GET',
  emits: ['users.fetched'],
  flows: ['user-management']
}

export const handler: Handlers['get-users'] = async (req, { emit }) => {
  const users = [{ id: '1', name: 'John' }] // Your data logic here
  
  await emit({
    topic: 'users.fetched',
    data: { users }
  })
  
  return {
    status: 200,
    body: { users }
  }
}
```

### API with Path Parameters
```typescript
export const config: ApiRouteConfig = {
  type: 'api',
  name: 'get-user-by-id',
  path: '/users/:id',
  method: 'GET',
  emits: ['user.retrieved'],
  flows: ['user-management']
}

export const handler: Handlers['get-user-by-id'] = async (req, { emit }) => {
  const userId = req.pathParams.id
  
  // Your logic to find user by ID
  const user = { id: userId, name: 'John Doe' }
  
  return {
    status: 200,
    body: { user }
  }
}
```

