name: Kill Process on Port 3000


inputs:
  port:
    description: 'Port number to kill processes on'
    required: false
    default: '3000'

runs:
  using: 'composite'
  steps:
    - name: Kill process on port ${{ inputs.port }} (Unix)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        PORT=${{ inputs.port }}
        echo "üîç Checking for processes on port $PORT (Unix)..."
        
        if command -v lsof >/dev/null 2>&1; then
          PID=$(lsof -ti:$PORT 2>/dev/null)
        else
          PID=$(netstat -tlnp 2>/dev/null | grep :$PORT | awk '{print $7}' | cut -d'/' -f1)
        fi
        
        if [ ! -z "$PID" ]; then
          echo "üö´ Killing process $PID on port $PORT"
          kill -9 $PID || echo "‚ö†Ô∏è Failed to kill process $PID"
          echo "‚úÖ Process killed successfully"
        else
          echo "‚ÑπÔ∏è No process found on port $PORT"
        fi

    - name: Kill process on port ${{ inputs.port }} (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        $port = "${{ inputs.port }}"
        Write-Host "üîç Checking for processes on port $port (Windows)..."
        
        try {
          $connection = Get-NetTCPConnection -LocalPort $port -ErrorAction SilentlyContinue
          if ($connection) {
            $processId = $connection.OwningProcess
            Write-Host "üö´ Killing process $processId on port $port"
            Stop-Process -Id $processId -Force -ErrorAction SilentlyContinue
            Write-Host "‚úÖ Process killed successfully"
          } else {
            Write-Host "‚ÑπÔ∏è No process found on port $port"
          }
        } catch {
          Write-Host "‚ö†Ô∏è Error checking/killing process on port $port : $_"
        }