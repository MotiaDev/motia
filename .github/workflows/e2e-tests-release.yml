name: E2E Tests (Release)

# This workflow runs end-to-end tests across multiple operating systems:
# - Ubuntu (Linux)
# - Windows 
# - macOS
# Ensures cross-platform compatibility of the Motia framework

permissions:
  contents: read
  actions: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version being tested'
        required: true
      tag_name:
        description: 'Git tag name'
        required: true
      triggered_by:
        description: 'Run ID that triggered this workflow'
        required: true

jobs:
  e2e-tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    env:
      CI: true
      NODE_ENV: test
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Install pre-release packages globally
        run: |
          npm install -g motia@${{ github.event.inputs.version }} --tag pre-release

      - name: Get Playwright version
        id: playwright-version
        run: |
          cd packages/e2e
          echo "version=$(node -p "require('./package.json').dependencies['@playwright/test'] || require('./package.json').devDependencies['@playwright/test']")" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
            ~/AppData/Local/ms-playwright
            ~/Library/Caches/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}

      - name: Install E2E dependencies and browsers
        run: |
          cd packages/e2e
          pnpm install
          pnpm exec playwright install
          pnpm exec playwright install-deps

      - name: Clean previous test artifacts
        run: |
          cd packages/e2e
          pnpm clean
          
      - name: Kill any existing processes (Unix)
        if: runner.os != 'Windows'
        run: |
          pkill -f "motia" || true
          pkill -f "npm run dev" || true
          pkill -f "node.*3000" || true

      - name: Kill any existing processes (Windows)
        if: runner.os == 'Windows'
        run: |
          taskkill /F /IM node.exe /T 2>nul || echo "No node processes to kill"
          Get-Process | Where-Object {$_.ProcessName -like "*motia*"} | Stop-Process -Force -ErrorAction SilentlyContinue
        shell: powershell

      - name: Verify Motia CLI installation (Unix)
        if: runner.os != 'Windows'
        run: |
          which motia || echo "Motia CLI not found in PATH"
          npx motia --version || echo "Motia CLI version check failed"
          node --version
          npm --version

      - name: Verify Motia CLI installation (Windows)
        if: runner.os == 'Windows'
        run: |
          where motia 2>nul || echo "Motia CLI not found in PATH"
          npx motia --version || echo "Motia CLI version check failed"
          node --version
          npm --version
        shell: cmd
          
      - name: Run Release E2E tests
        id: run_tests
        env:
          MOTIA_VERSION: ${{ github.event.inputs.version }}
          MOTIA_API_URL: http://localhost:3000
        run: |
          echo "Starting Release E2E tests with Motia version: $MOTIA_VERSION"
          pnpm test:release --reporter=line,html,github
        continue-on-error: true

      - name: Set test result
        id: test_result
        run: |
          echo "Test outcome: ${{ steps.run_tests.outcome }}"
          if [ "${{ steps.run_tests.outcome }}" == "success" ]; then
            echo "result=success" >> $GITHUB_OUTPUT
            echo "✅ E2E tests passed successfully"
          else
            echo "result=failure" >> $GITHUB_OUTPUT
            echo "❌ E2E tests failed"
            echo "Check the test results and logs for details"
            exit 1
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results-${{ github.event.inputs.version }}-${{ matrix.os }}
          path: |
            packages/e2e/playwright-report/
            packages/e2e/test-results/
          retention-days: 30

  check-results:
    needs: e2e-tests
    runs-on: ubuntu-latest
    if: always()
    outputs:
      result: ${{ steps.final_result.outputs.result }}
    steps:
      - name: Check all matrix results
        id: final_result
        run: |
          echo "Checking results from all OS matrix jobs..."
          
          # Get the results from the matrix jobs
          RESULTS='${{ toJSON(needs.e2e-tests.result) }}'
          echo "Matrix job result: $RESULTS"
          
          if [ "$RESULTS" == "success" ]; then
            echo "result=success" >> $GITHUB_OUTPUT
            echo "✅ All E2E tests passed successfully across all platforms"
          else
            echo "result=failure" >> $GITHUB_OUTPUT
            echo "❌ E2E tests failed on one or more platforms"
            exit 1
          fi

  trigger-next-step:
    needs: check-results
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.MOTIA_CI_APP_ID }}
          private-key: ${{ secrets.MOTIA_CI_APP_PRIVATE_KEY }}

      - name: Trigger finalize release (on success)
        if: needs.check-results.outputs.result == 'success'
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'finalize-release.yml',
              ref: 'main',
              inputs: {
                version: '${{ github.event.inputs.version }}',
                tag_name: '${{ github.event.inputs.tag_name }}',
                triggered_by: '${{ github.event.inputs.triggered_by }}'
              }
            });

      - name: Trigger rollback (on failure)
        if: needs.check-results.outputs.result == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'rollback-release.yml',
              ref: 'main',
              inputs: {
                version: '${{ github.event.inputs.version }}',
                tag_name: '${{ github.event.inputs.tag_name }}',
                triggered_by: '${{ github.event.inputs.triggered_by }}',
                reason: 'E2E tests failed'
              }
            }); 